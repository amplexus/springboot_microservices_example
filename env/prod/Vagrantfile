# Which version of the app to install...
CFG_APP_VERSION = ENV['CUSTOMER_VERSION']

# Correct timezone
CFG_TZ = "Australia/Sydney"

provisioning_script = <<SCRIPT
#!/bin/bash

NEXUS_URL_PREFIX="http://craigiebabe.net:8081/nexus/content/repositories/releases"
TARGET_DIR=/opt/springboot-microservices-demo/customer

echo "#{CFG_TZ}" > /etc/timezone    
dpkg-reconfigure -f noninteractive tzdata

grep craigiebabe /etc/apt/sources.list || echo "deb ${NEXUS_URL_PREFIX}/ ./" >> /etc/apt/sources.list
apt-get update
apt-get install vim curl zip unzip -y --no-upgrade
apt-get install openjdk-8-jre -y --no-upgrade

rm -rf $TARGET_DIR
mkdir -p $TARGET_DIR

URL="${NEXUS_URL_PREFIX}/org/amplexus/springboot/demo/customer/#{CFG_APP_VERSION}/customer-#{CFG_APP_VERSION}.zip"
curl -s "${URL}" -o ${TARGET_DIR}/customer-#{CFG_APP_VERSION}.zip
cd ${TARGET_DIR}
unzip customer-#{CFG_APP_VERSION}.zip
echo "Starting customer microservice..."
cd ${TARGET_DIR}/customer-#{CFG_APP_VERSION}/bin
nohup ./customer &

# Give the app a few seconds to get ready
sleep 20;

echo Provisioning is complete
SCRIPT

Vagrant.configure("2") do |config|

  config.vm.box = "gce"

  config.vm.provision :shell, :inline => provisioning_script
 
  config.vm.provider :google do |google, override|

    google.image = "debian-8-jessie-v20150915"
    google.machine_type = "n1-standard-1"
    google.zone = "us-central1-f"

    google.google_project_id = ENV['GOOGLE_PROJECT_ID']
    google.google_client_email = ENV['GOOGLE_CLIENT_EMAIL']
    google.google_json_key_location = ENV['HOME'] + "/.ssh/gce_vagrant.json"

    google.name = "prod-microservices-demo"

    google.tags = ['http-server', 'https-server'] # these tags will trigger opening of ports 80 and 443

    if ENV['GOOGLE_SSH_USER'] and ENV['GOOGLE_SSH_KEY_LOCATION']
        override.ssh.username = ENV['GOOGLE_SSH_USER']
        override.ssh.private_key_path = ENV['GOOGLE_SSH_KEY_LOCATION']
    else
        override.ssh.username = ENV['USER']
        override.ssh.private_key_path = ENV['HOME'] + "/.ssh/id_rsa"
    end
  end

end
